CREATE TABLE IF NOT EXISTS users (
user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(100) NOT NULL,
login VARCHAR(50) NOT NULL,
name VARCHAR(50),
birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
mpa_id INT NOT NULL PRIMARY KEY,
name VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS genre (
genre_id INT PRIMARY KEY,
name VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS film (
film_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) NOT NULL,
description VARCHAR(255) NOT NULL,
release_date DATE NOT NULL,
duration INT NOT NULL,
mpa_id INT NOT NULL,
CONSTRAINT fk_mpa_id FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
film_id INT NOT NULL,
genre_id INT NOT NULL,
CONSTRAINT fk_film_genre
FOREIGN KEY (film_id) REFERENCES film (film_id),
CONSTRAINT fk_genre_id
FOREIGN KEY (genre_id) REFERENCES genre (genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
film_id INT NOT NULL,
user_id INT NOT NULL,
CONSTRAINT fk_film_like
FOREIGN KEY (film_id) REFERENCES film (film_id),
CONSTRAINT fk_user_like
FOREIGN KEY (user_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS friendship (
user_id INT NOT NULL,
friend_id INT NOT NULL,
CONSTRAINT fk_user_friend
FOREIGN KEY (user_id) REFERENCES users (user_id),
CONSTRAINT fk_friend_friend
FOREIGN KEY (friend_id) REFERENCES users (user_id)
);

